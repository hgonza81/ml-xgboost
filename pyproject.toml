[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ml-api-platform"
version = "0.1.0"
description = "ML API Platform with FastAPI and MLflow"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "ML API Platform Team"}
]
keywords = ["machine-learning", "api", "mlflow", "fastapi", "xgboost"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # FastAPI and web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    
    # MLflow and ML dependencies
    "mlflow>=2.8.0",
    "xgboost>=2.0.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    
    # Data processing
    "scipy>=1.11.0",
    "joblib>=1.3.0",
    
    # Configuration and environment
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    
    # AWS and cloud services
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    
    # HTTP and networking
    "httpx>=0.25.0",
    "requests>=2.31.0",
    
    # Logging and monitoring
    "structlog>=23.2.0",
    "python-json-logger>=2.0.7",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    
    # Code quality
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    
    # Development tools
    "jupyter>=1.0.0",
    "ipython>=8.17.0",
]

production = [
    # Production monitoring
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.38.0",
    
    # Production databases
    "psycopg2-binary>=2.9.9",
    "pymysql>=1.1.0",
]

[project.urls]
Homepage = "https://github.com/your-org/ml-api-platform"
Documentation = "https://github.com/your-org/ml-api-platform#readme"
Repository = "https://github.com/your-org/ml-api-platform.git"
Issues = "https://github.com/your-org/ml-api-platform/issues"

[project.scripts]
ml-api = "src.api.main:main"
ml-train = "src.training.train:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mlflow.*",
    "xgboost.*",
    "sklearn.*",
    "boto3.*",
    "botocore.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]